name: Build Image
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Release Name
        id: set-release-name
        run: echo "RELEASE=build${{ github.run_number }}_$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Setup packer
        uses: hashicorp/setup-packer@main
        with:
          version: "1.9.1"
      - name: install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: qemu-user-static
          version: 1.0
      - name: Run `packer init`
        id: init
        run: "sudo -E packer init ./"
        env:
          PKR_VAR_default_password: ${{ secrets.PKR_VAR_DEFAULT_PASSWORD }}
          PKR_VAR_default_username: ${{ secrets.PKR_VAR_DEFAULT_USERNAME }}
          PKR_VAR_wifi_name: ${{ secrets.PKR_VAR_WIFI_NAME }}
          PKR_VAR_wifi_password: ${{ secrets.PKR_VAR_WIFI_PASSWORD }}
          PKR_VAR_repo: "${{ github.server_url }}/${{ github.repository }}"
          PKR_VAR_sha: ${{ github.sha }}
          PKR_VAR_release: ${{ steps.set-release-name.outputs.RELEASE }}
      - name: Run `packer build`
        id: build
        run: "sudo -E packer build ./"
        env:
          PKR_VAR_default_password: ${{ secrets.PKR_VAR_DEFAULT_PASSWORD }}
          PKR_VAR_default_username: ${{ secrets.PKR_VAR_DEFAULT_USERNAME }}
          PKR_VAR_wifi_name: ${{ secrets.PKR_VAR_WIFI_NAME }}
          PKR_VAR_wifi_password: ${{ secrets.PKR_VAR_WIFI_PASSWORD }}
          PKR_VAR_repo: "${{ github.server_url }}/${{ github.repository }}"
          PKR_VAR_sha: ${{ github.sha }}
          PKR_VAR_release: ${{ steps.set-release-name.outputs.RELEASE }}
      - name: chown
        run: sudo chown -v -R runner:docker *
      - name: ls
        run: ls -l
      - name: Create Release
        if: github.ref_name == 'main'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.set-release-name.outputs.RELEASE }}
          makeLatest: true
          artifacts: "*.img.tar.gz,*.img.sha256sum"
          body: ${{ steps.set-release-name.outputs.RELEASE }}
      - name: Archive Output
        if: github.ref_name != 'main'
        uses: actions/upload-artifact@v3
        with:
          name: build-result
          path: |
            *.img.tar.gz
            *.img.sha256sum
